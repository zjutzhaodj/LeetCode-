给定长度为 2n 的数组, 你的任务是将这些数分成 n 对, 例如 (a1, b1), (a2, b2), ..., (an, bn) ，使得从1 到 n 的 min(ai, bi) 总和最大。

示例 1:

输入: [1,4,3,2]

输出: 4
解释: n 等于 2, 最大总和为 4 = min(1, 2) + min(3, 4).
提示:

n 是正整数,范围在 [1, 10000].
数组中的元素范围在 [-10000, 10000].



class Solution {
    public int arrayPairSum(int[] nums) {
        Arrays.sort(nums);
        int sum = 0;
        for(int i=0;i<nums.length;i=i+2){
            sum+=nums[i];
        }
        return sum;
    }
}


解析：
1、假设给定数组nums[]
2、我们将数组nums[]进行两两分组，（a1,b1） (a2,b2) (a3,b3)…(ai,bi) 假设bi>ai
3、我们求的Sm = min（a1,b1） +min(a2,b2)+…min(ai,bi) = a1+a2+a3+…ai
4、由于给定的数组是恒定的，所以数组内的和也是恒定的 Ss = a1+b1+a2+b2…ai+bi
5、假定 bi-ai的差值为 di 即 di = bi-ai 所以所有差值的总和 Sd = （b1-a1）+(b2-a2)+…（bi-ai）
6、Ss = 2Sm+Sd  Sm = (Ss-Sd)/2  由于Ss是恒定的，所以为了让Sm最大，Sd需要尽可能的小 即bi-ai 尽可能的小，所以可以将数组排序后，取相邻2个分为一组