两个整数之间的汉明距离指的是这两个数字对应二进制位不同的位置的数目。

给出两个整数 x 和 y，计算它们之间的汉明距离。

注意：
0 ≤ x, y < 231.

示例:

输入: x = 1, y = 4

输出: 2

解释:
1   (0 0 0 1)
4   (0 1 0 0)
       ↑   ↑

上面的箭头指出了对应二进制位不同的位置。




class Solution {
    public int hammingDistance(int x, int y) {
        int res = a ^ b;
        int count = 0;
        while (res !=0){
            if((res&1) == 1){
                count++;
            }
            res = res>>1;
        }
        return count;
    }
}

耗时：10ms

--------------------------------------------------------

1、首先对两数进行异或^操作，然后将问题转变为了求一个数二进制位1的个数问题
    方法 1)Integer.bitCount(int i)  return 二进制中1的个数
    方法 2)循环右移与1做&操作，为1的话count++， 直到res == 0

